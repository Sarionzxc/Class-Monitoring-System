
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, Toplevel, messagebox
from build.main_window.class_f.main import ClassRoom
from build.main_window.dashboard.gui2 import Dashboard



OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"./assets")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


#window = Tk()

#window.geometry("859x500")
#window.configure(bg = "#EDA2A2")
def mainWindow():
    MainWindow()

class MainWindow(Toplevel):
    def __init__(self, *args, **kwargs):
        Toplevel.__init__(self, *args, **kwargs)

        self.title("Class Monitoring System")
        self.geometry("859x500")
        self.configure(bg = "#EDA2A2")

        # Calculate the position to center the window
        screen_width = self.winfo_screenwidth()
        screen_height = self.winfo_screenheight()
        window_width = 859
        window_height = 500
        x_position = (screen_width - window_width) // 2
        y_position = (screen_height - window_height) // 2

        self.geometry(f"{window_width}x{window_height}+{x_position}+{y_position}")

        canvas = Canvas(
            self,
            bg = "#EDA2A2",
            height = 500,
            width = 859,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            167.0,
            0.0,
            859.0,
            500.0,
            fill="#FFFCFC",
            outline="")

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.dashboard_button = Button(
            self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.dashboard_button, "dash"),
            relief="flat"
        )
        self.dashboard_button.place(
            x=1.0,
            y=215.0,
            width=166.0,
            height=42.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.attach_button = Button(
            self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.handle_btn_press(self.attach_button, "att"),
            relief="flat"
        )
        self.attach_button.place(
            x=0.0,
            y=279.0,
            width=167.0,
            height=42.0
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        button_3 = Button(
            self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_3.place(
            x=1.0,
            y=424.0,
            width=166.0,
            height=49.0
        )

        canvas.create_text(
            26.0,
            139.0,
            anchor="nw",
            text="Class Monitoring System",
            fill="#0D0C0C",
            font=("InriaSerif Regular", 10 * -1)
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        image_1 = canvas.create_image(
            69.0,
            76.0,
            image=self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            96.0,
            77.0,
            image=self.image_image_2
        )

        canvas.create_rectangle(
            4.0,
            214.0,
            5.0,
            257.0,
            fill="#000000",
            outline="")

        canvas.create_rectangle(
            4.0,
            278.0,
            5.0,
            321.0,
            fill="#000000",
            outline="")

        self.windows = {
            "dash":Dashboard(self),
             "att":  ClassRoom (self),          
         }
     
        #dri.ilisan.pang.frontpage
        self.handle_btn_press(self.dashboard_button, "dash")
        #self.sidebar_indicator.place(x=0, y=124)
        self.resizable(False, False)
        self.mainloop()
        
        self.current_window.tkraise()
    
     
    def place_sidebar_indicator(self):
        pass    
    
    def logout(self):
        confirm = messagebox.askyesno(
            "Confirm log-out", "Do you really want to log out?"
        )
        if confirm == True:
            user = None
            self.destroy()
            #LoginPage()
     
    def handle_btn_press(self, caller, name):
        # Place the sidebar on respective button
      #  self.sidebar_indicator.place(x=0, y=caller.winfo_y())

        # Hide all screens
        for window in self.windows.values():
            window.place_forget()

        # Set ucrrent Window
        self.current_window = self.windows.get(name)

        # Show the screen of the button pressed
        self.windows[name].place(x=167, y=0, width=692, height=500)
     

    def handle_dashboard_refresh(self):
        # Recreate the dash window
        self.windows["dash"] = Dashboard(self)

#if __name__ == "__main__":
 #  main_window = MainWindow()
  # main_window.mainloop()

